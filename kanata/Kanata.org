#+TITLE: Kanata configuration
#+AUTHOR: E.M. From
#+STARTUP: overview

Setup of the kanata keyboard manager

Based on this video:
https://www.youtube.com/watch?v=sLWQ4Gx88h4

* Config file
Writing out the layout as ascii art is not necessary but helpful

I have two maps
base: with home row modifiers 
nav: jkl; act as navigation keys but otherwise the same s the first

The home row modifiers are not entirely symmetric.
sdf and jkl are, however
a is mapped to switching the layer
g and ; are mapped to super.

The super mappings are both to lmet, aka the windows key.
The mapping of the meny key (ralt here) to Hyper is done via xmodmap

#+begin_src lisp :tangle ./config.kbd :mkdirp yes
     ;; defsrc is still necessary
     (defcfg
         process-unmapped-keys yes)
   (defsrc
     esc   1    2    3    4    5    6    7    8    9    0    -    =    bspc
     tab   q    w    e    r    t    y    u    i    o    p    [    ]    \
     caps  a    s    d    f    g    h    j    k    l    ;    '    ret
     lsft  z    x    c    v    b    n    m    ,    .    /    rsft
     lctl  lmet lalt           spc            ralt rmet rctl
   )

     (defvar
       tap-time 0
       hold-time 200)

  (defalias src (multi _ (layer-switch base)))
     ;;
     ;; Uses non-emacsy names
     ;;
     ;; lmet and rmet means super
     ;; lalt and ralt means meta
     ;;
     (defalias
       navr (multi (layer-while-held nav) (layer-switch base))
       caps (tap-hold $tap-time $hold-time bspc (multi (layer-while-held nav) (layer-switch base)))
       tab (tap-hold $tap-time $hold-time tab esc)
       grv (tap-hold $tap-time $hold-time grv esc)
       a (tap-hold $tap-time $hold-time a (multi (layer-while-held nav) (layer-switch base)))
       s (tap-hold $tap-time $hold-time s lalt)
       d (tap-hold $tap-time $hold-time d lsft)
       f (tap-hold $tap-time $hold-time f lctl)
       j (tap-hold $tap-time $hold-time j rctl)
       k (tap-hold $tap-time $hold-time k rsft)
       l (tap-hold $tap-time $hold-time l ralt)
       ; (tap-hold $tap-time $hold-time ; lmet)
       g (tap-hold $tap-time $hold-time g lmet)

       up (tap-hold $tap-time $hold-time up rctl)
       left (tap-hold $tap-time $hold-time left rsft)
       right (tap-hold $tap-time $hold-time right ralt)
       down  (tap-hold $tap-time $hold-time down lmet)

       game (tap-hold $tap-time 1000 tab (layer-switch game))
       gameback (tap-hold $tap-time 1000 tab (layer-switch base))
     )
   
  (defalias
      nav  (layer-switch nav)
      base (layer-switch base)
  )

   (deflayer base
     grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
    @tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
    @caps @a   @s   @d   @f   @g   h    @j   @k   @l   @;    '   ret
     @nav z    x    c    v    b    n    m    ,    .    /    @nav
     lctl lmet ret           spc            @game rmet rctl
   )

    (deflayer nav
    @src   @src  @src  @src  @src  @src  @src  @src  @src  @src  @src  -    =  bspc
    @tab  @src  @src  @src  @src  @src  @src  @src  @src  @src  @src    [    ]    \
    @caps   @a   @s   @d   @f   @g  @src    @up   @left   @right  @down  ' @src
    @base @src  @src  @src  @src  @src  @src  @src    ,    .    up    @base
    @src  @src ret           spc           left  down right
   )



    (deflayer game
       esc   1    2    3    4    5    6    7    8    9    0    -    =    bspc
       tab   q    w    e    r    t    y    u    i    o    p    [    ]    \
       caps  a    s    d    f    g    h    j    k    l    ;    '    ret
       lsft  z    x    c    v    b    n    m    ,    .    /    rsft
       lctl  lmet lalt           spc            @gameback rmet rctl
     )


  
#+end_src
QWFPBJLUY;[]




  (deflayer colemak-dh-not-finished
      grv    1    2    3    4    5    6    7    8    9    0    -    =    bspc
      tab    q    w    f    p    t    y    u    i    o    p    [    ]    \
     @bspc   @a   @s   @d   @f   @g    h    down   left   right   up    '    ret
      lsft   z    x    c    v    b    n    m    ,    .    /    rsft
      lctl  lmet  tab        spc            ret  rmet  rctl
      ) 

      
* Adding Hyper key

xmodmap is called in [[~/etc/emacs/Emacs.org][Emacs.org]]

I am using the arrow keys now in the nav laayer so I just map menu key directly to down so that it's valid 
Note, I completely removed the hyper key from emacs.

#+begin_src shell :tangle ~/etc/emacs/exwm/Xmodmap
  keycode 135 = NoSymbol
  keycode 135 = Down
#+end_src
  # clear Mod3
  # keycode 135 = Hyper_L
  # remove Mod4 = Hyper_L
  # add Mod3 = Hyper_L

* Systemd entry

#+begin_src shell :tangle ~/etc/systemd/user/kanata.service
  [Unit]
  Description=Kanata keyboard remapper
  Documentation=https://github.com/jtroo/kanata

  [Service]
  Environment=PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/bin
  Environment=DISPLAY=:0
  Type=simple
  ExecStart=/usr/bin/sh -c 'exec /home/emfrom/bin/kanata -c /home/emfrom/etc/kanata/config.kbd'
  Restart=no

  [Install]
  WantedBy=default.target

#+end_src

* Tangle on save
Lastly, setup org babel to auto-tangle in this directory

#+begin_src emacs-lisp :tangle ./.dir-locals.el :mkdirp yes
((org-mode . ((eval . (add-to-list 'emf/org-babel-autotangle-dirs (file-name-directory (or load-file-name buffer-file-name)))))))
#+end_src

