#+TITLE: Environment setup
#+AUTOR: E.M. From
#+STARTUP: overview

These are my environment defaults

Currently loaded by bashrc, emacs init.el and nu.env

* Shell
#+begin_src shell :tangle ./shell.env
  # Dont edit this file, edit Environment.org

  PAGER=less
  EDITOR=emacsclient
  LD_LIBRARY_PATH=/usr/local/lib

#+end_src

* Rust
#+begin_src shell :tangle ./rust.env
  # Dont edit this file, edit Environment.org
  
  CARGO_TARGET_DIR=/home/emfrom/opt/rust/cargo/target
  CARGO_HOME=/home/emfrom/opt/rust/cargo
  CARGO_BUILD_JOBS=8
  RUSTUP_HOME=/home/emfrom/opt/rust/rustup
  RUST_BACKTRACE=1
#+end_src

* Haskell
#+begin_src shell :tangle ./haskell.env
GHCUP_INSTALL_BASE_PREFIX=/home/emfrom/opt/haskell
CABAL_DIR=/home/emfrom/opt/haskell/cabal
STACK_ROOT=/home/emfrom/opt/haskell/stack
#+END_SRC

* XDG Setting
#+begin_src shell :tangle ./xdg.env
  # Dont edit this file, edit Environment.org
  
  XDG_DATA_HOME=/home/emfrom/share
  XDG_CONFIG_HOME=/home/emfrom/etc
  XDG_CACHE_HOME=/home/emfrom/opt/cache
  XDG_STATE_HOME=/home/emfrom/opt/state
  XDG_RUNTIME_DIR=/run/user/1000
#+END_SRC

* Locale

LC_MEASUREMENT=metric might now be supported everywhere

#+begin_src shell :tangle ./locale.env
  # Dont edit this file, edit Environment.org


  LANGUAGE=en_GB:en
  LANG=en_GB.UTF-8
  XTERM_LOCALE=en_GB.UTF-8
  PAPERSIZE=a4
  LC_ALL=en_GB.UTF-8

#+END_SRC

* GUIX
#+begin_src shell :tangle ./locale.env

GUIX_PROFILE=/home/emfrom/.guix-profile
GUIX_LOCPATH=/home/emfrom/.guix-profile/lib/locale

#+END_SRC

* Scripts and emacs stuff

** Shell script to load the files

#+begin_src bash
#!/bin/bash
#
# Load environment defaults
#

for file in *.env ; do
    [[ -f $file ]] || continue
    while IFS= read -r line ; do
        # Ignore empty lines and comments
        [[ -z "$line" || "$line" =~ ^# ]] && continue

        # Replace variables in the line
        line=$(eval "echo \"$line\"")

        if [[ "$line" =~ ^[a-zA-Z_][a-zA-Z0-9_]*=(.*)$ ]]; then
            eval "export $line"
        else
            echo "Ignored malformatted line: $line"
        fi
    done < "$file"
done
#+end_src



** Tangle on save
Lastly, setup org babel to auto-tangle in this directory

#+begin_src emacs-lisp :tangle ./.dir-locals.el :mkdirp yes
  ((org-mode . ((eval . (add-to-list 'emf/org-babel-autotangle-dirs (file-name-directory (or load-file-name buffer-file-name)))))))
#+end_src

